[project]
name = "contract-api"
version = "0.1.0"
description = "An API developed in Python with the Quart framework, designed to manage contract-related information. It offers routes for creating, retrieving, updating, and deleting data."
authors = [
    {name = "Victor L. Castro",email = "victorlcastro.dsa@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "quart[dotenv] (>=0.20.0,<0.21.0)",
    "quart-schema (>=0.21.0,<0.22.0)",
    "pydantic (>=2.10.5,<3.0.0)",
    "aerich (>=0.8.1,<0.9.0)",
    "tortoise-orm (>=0.23.0,<0.24.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "validate-docbr (>=1.10.0,<2.0.0)",
    "quart-bcrypt (>=0.0.9,<0.0.10)",
    "python-dateutil (>=2.9.0.post0,<3.0.0)",
    "email-validator (>=2.2.0,<3.0.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
    { include = "src" }
]

[tool.poetry.scripts]
start = "src.api:run"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.25.2"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.aerich]
tortoise_orm = "src.api.database.config.TORTOISE_ORM"
location = "./migrations"
